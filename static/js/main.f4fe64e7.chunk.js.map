{"version":3,"sources":["components/navBar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","href","Counter","classes","this","props","value","children","getBtnClasses","onClick","onIncrement","id","onDelete","onClear","Component","Counters","counters","onResetGlobal","map","counter","App","state","handleIncrement","counterID","countersIndex","x","indexOf","setState","handleDelete","filter","c","handleClear","console","log","newCounters","element","handleResetGlobal","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","require","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4fe64e7.chunk.js","sourcesContent":["const NavBar = ({ totalCounters }) => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-light bg-light\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"#Home\">\r\n\t\t\t\t\tNavbar{' '}\r\n\t\t\t\t\t<span>Current amount of counters that have values: {totalCounters}</span>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n\tgetBtnClasses() {\r\n\t\tlet classes = 'btn m-2 ';\r\n\t\tclasses += this.props.value === 0 ? 'btn-secondary' : 'btn-warning';\r\n\t\treturn classes;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t\t<span className={this.getBtnClasses()}>{this.props.value}</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => this.props.onIncrement(this.props.id)}\r\n\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tincrement\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger m-2\"\r\n\t\t\t\t\tonClick={() => this.props.onDelete(this.props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-success m-2\"\r\n\t\t\t\t\tonClick={() => this.props.onClear(this.props.id)}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport Counter from './counter';\r\nclass Counters extends Component {\r\n\trender() {\r\n\t\tconst { onClear, counters, onDelete, onIncrement, onResetGlobal } =\r\n\t\t\tthis.props;\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<button className=\"btn btn-primary btn-sm m-4\" onClick={onResetGlobal}>\r\n\t\t\t\t\tReset ALL\r\n\t\t\t\t</button>\r\n\t\t\t\t{counters.map((counter) => (\r\n\t\t\t\t\t<Counter\r\n\t\t\t\t\t\tkey={counter.id}\r\n\t\t\t\t\t\tonDelete={onDelete}\r\n\t\t\t\t\t\tonIncrement={onIncrement}\r\n\t\t\t\t\t\tonClear={onClear}\r\n\t\t\t\t\t\tvalue={counter.value}\r\n\t\t\t\t\t\tid={counter.id}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h4>Counter # {counter.id}</h4>\r\n\t\t\t\t\t</Counter>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Counters;\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport NavBar from './components/navBar';\nimport Counters from './components/counters';\n\nclass App extends Component {\n\tstate = {\n\t\tcounters: [\n\t\t\t{ id: 1, value: 0 },\n\t\t\t{ id: 2, value: 0 },\n\t\t\t{ id: 3, value: 0 },\n\t\t\t{ id: 4, value: 0 },\n\t\t],\n\t};\n\n\thandleIncrement = (counterID) => {\n\t\tconst counters = [...this.state.counters];\n\t\tconst countersIndex = counters\n\t\t\t.map(function (x) {\n\t\t\t\treturn x.id;\n\t\t\t})\n\t\t\t.indexOf(counterID);\n\t\tcounters[countersIndex].value++;\n\t\tthis.setState({ counters });\n\t};\n\n\thandleDelete = (counterID) => {\n\t\tconst counters = this.state.counters.filter((c) => c.id !== counterID);\n\t\tthis.setState({ counters });\n\t};\n\n\thandleClear = (counterID) => {\n\t\tconst counters = this.state.counters;\n\t\tconsole.log('clear called on ', counterID);\n\t\tconsole.log(this.state);\n\t\tconst newCounters = counters.map((element) => {\n\t\t\tif (element.id === counterID) {\n\t\t\t\telement.value = 0;\n\t\t\t}\n\t\t\treturn element;\n\t\t});\n\t\tthis.setState({ counters: newCounters });\n\t};\n\thandleResetGlobal = () => {\n\t\tconst counters = this.state.counters.map((c) => {\n\t\t\tc.value = 0;\n\t\t\treturn c;\n\t\t});\n\t\tthis.setState({ counters });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<NavBar\n\t\t\t\t\ttotalCounters={this.state.counters.filter((c) => c.value > 0).length}\n\t\t\t\t></NavBar>\n\t\t\t\t<main className=\"container\">\n\t\t\t\t\t<Counters\n\t\t\t\t\t\tcounters={this.state.counters}\n\t\t\t\t\t\tonClear={this.handleClear}\n\t\t\t\t\t\tonResetGlobal={this.handleResetGlobal}\n\t\t\t\t\t\tonDelete={this.handleDelete}\n\t\t\t\t\t\tonIncrement={this.handleIncrement}\n\t\t\t\t\t></Counters>\n\t\t\t\t</main>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import Counters from './components/counters';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst bootstrap = require('bootstrap/dist/css/bootstrap.css');\n\nif (false === true) {\n\tconsole.log('bootstrap :>> ', bootstrap);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}